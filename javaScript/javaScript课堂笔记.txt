一 .JavaScript基本介绍


1.JavaScript是一个在浏览器中编译运行的【脚本编程语言】
2.脚本编程语言基于ECMAScript标准研发的编程语言
3.JavaScript作用定位浏览器内存中DOM对象，通过DOM对象属性设置，从而影响对应的html标签。简单来说JavaScript实现页面中html标签的人机交互功能
4.JavaScript5.0特点：
	[基于]面向对象思想[弱类型]编程语言
	
二.JavaScript的开发方式
	1.可以直接在html文件中的<script>中进行开发
	2.可以脚本文件(.js)声明JS命令行.然后通过html文件<script>进行加载使用
	
三.通过<script>标签加载外部文件时需要注意的地方

	1.用于加载外部脚本文件的<script>不能用于声明js命令行，即使声明js命令行也不会被执行
	2.<script>标签一次只能体现一种功能
	3.在浏览器加载网页时，对于网页内部JS命令和外部加载而来的js命令，是按照什么顺序调用的？
		答案：默认情况下根据声明的顺序调用。
	
	四. 如何声明变量/对象
		
		1.声明形式：var 变量名=值
		2.JavaScrip是弱类型语言，没有类的概念。因此声明变量时不能指定变量类型。此时根据变量的赋值类型决定变量的数据类型
		3.变量名：
			1)变量名只能由 字母，数字，_，$组成
			2)变量名首字母不能是数字
		4.可以先使用变量，再去声明变量
		5.建议采用先声明再使用
		
五.JavaScript中数据类型分类
			1.基本类型
				number:表示整数和小数
				string:表示字符串类型
				boolean:表示boolean类型
			2.高级类型
				object:在JavaScript中，绝大多数高级类型都是object类型
				function:函数数据类型,相当于Java中的method
				array:数组类型，在JavaScript中，认为array也是object
				null:如果当前对象指向一个[空对象]时，就认为对象时null类型，在JavaScript中认为null也是object
				undefined:如果这个变量只是声明但是没有被赋值，此时认为是未定义类型
				
				总结:javascript高级类型[object,function]
				
			3.如何获得变量的数据类型名
					typeof 变量名
					
六.JavaScript运算符
	JavaScript运算符与java运算符基本保持一致
	1.数学运算符:
	2.自增、自减
	3.关系运算符: > >=
				< <=
				!= ==
	4.逻辑运算符: && || !

七.javascript控制语句
   JavaScript控制语句与java控制语句基本保持一致
  ------------------------------------------------------------
  
				JavaScript 高级类型
 
 一.function数据类型
	1.定义：一个function类型对象，用于管理一个具体函数.
			function类型相当于Java中的java.lang.reflect.Method
	2.函数类型对象创建时机
	
		在浏览器记载一个函数后，会自动为当前函数创建一个函数类型对象
	3.函数声明方式：
		
		1)标准形式
			      function 函数名(参数名1，参数名2){
				  命令行1；
				  命令行2；
				  }
				  注意地方：
							首先，函数声明时，不能指定返回数据类型
							然后，函数的形参没有资格使用var来修饰，也不能指定形参的数据类型
		2)匿名声明形式
					
					var 函数对象 = function(参数1,参数2){命令行;}；
					
					****JavaScript中认为引用匿名函数的对象名字就是当前函数名***
		
		3)通过JavaScript中内置Function构造函数创建函数实例对象

4.JavaScript函数调用
	1.所有函数都是需要由隶属的对象进行调用 window.alert();
	2.如果函数隶属于window对象，此时可以省略window. alert();

5.JavaScript中，全局变量，局部变量，全局对象
		1.[全局对象]:[全局对象]就是顶级对象，在JavaScript中[全局对象]就是window
		2.[局部变量]:在函数体内通过var声明的变量，成为[局部变量]，这个变量只能在函数体内部使用，不能再函数体外部使用
		3.[全局变量]:在<script>中直接声明变量还有函数，都是全局变量，所用的全局变量，自动作为window的函数或属性

6.JavaScript中是否会出现函数重载这个概念
		JavaScript中不存在[函数重载]的概念
7.JavaScript中函数参数管理方式
	JavaScript中采用[动态参数]管理方式进行管理。所以JavaScript函数在调用时，不需要与函数形参进行对应
8.JavaScript中如何得到函数形参的个数和函数运行时得到的实参。
	在JavaScript中，每一个函数类型对象自动分配一个length，返回当前函数声明形参个数
	
	在JavaScript中，每一个函数类型对象自动分配一个arguments，这个属性是一个数组，在这个数组保存函数运行时接收所有的实参
	注意：length属性可以在函数内部和外部使用，arguments属性只能在函数内部使用
	
9.函数声明与变量声明提升
	1.标准形式声明函数，可以遵守变量声明提升
	2.匿名形式声明函数，不遵守变量声明提升
	
	
二.object数据类型
	1.object数据类型，[可以]认为JavaScript中顶级数据类型.在JavaScript中绝大多数高级类型对象都是object类型
	2.如何创建一个object类型的对象
		1)通过调用object内置构造函数，创建一个object类型对象
		2)通过JSON格式，创建一个object类型对象
		3)通过自定义构造函数，创建一个object类型对象
	3.如何区分普通函数和自定义构造函数
			通过调用形式，决定当前函数是普通函数还是构造函数
			普通函数调用形式：对象.函数();
			构造函数调用形式：new 函数();
			
			在Java中方法内部的this的指向与JavaScript中函数内部this的指向是一样的
				1)在构造方法中，this指的是当前创建的实例对象
				2)在普通方法中，this指的是调用当前方法的实例对象